@model HiEIS.Areas.Admin.Models.CreateAdminAccount
@{
    ViewBag.Title = "Tạo quản trị viên";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}


<!-- Page content -->
<div class="wrapper wrapper-content animated fadeInRight small-form">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">

                <div class="ibox-title">
                    <h5>Thông tin Admin</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                    </div>
                </div><!-- ibox-title -->

                <div id="create-admin-form" class="ibox-content">

                    <table class="input-table">
                        <tr>
                            <td>
                                <span class="input-required">Tên tài khoản</span>
                            </td>
                            <td>
                                @Html.TextBoxFor(p => p.UserName, new { @class = "form-control" })
                                <span class="field-validation-error"></span>
                                @*@Html.ValidationMessageFor(p => p.UserName)*@
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <span class="input-required">Mật khẩu</span>
                            </td>
                            <td>
                                @Html.PasswordFor(p => p.Password, new { @class = "form-control" })
                                <span class="field-validation-error"></span>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <span class="input-required">Xác nhận mật khẩu</span>
                            </td>
                            <td>
                                @Html.PasswordFor(p => p.ConfirmPassword, new { @class = "form-control" })
                                <span class="field-validation-error"></span>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <span class="input-required">Email</span>
                            </td>
                            <td>
                                @Html.TextBoxFor(p => p.Email, new { @class = "form-control" })
                                <span class="field-validation-error"></span>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                Số điện thoại
                            </td>
                            <td>
                                @Html.TextBoxFor(p => p.PhoneNumber, new { @class = "form-control" })
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2" style="color: red">* Bắt buộc</td>
                        </tr>
                        <tr>
                            <td></td>
                            <td>
                                <button type="submit" class="btn btn-primary js-create">Lưu</button>
                                @Html.ActionLink("Quay lại", "Admin", "Account", null, new { @class = "btn btn-default" })
                            </td>
                        </tr>
                    </table>


                </div>
            </div><!-- /.ibox -->
        </div>
    </div>
</div><!-- Page content -->
@section scripts{
    <script>
        function getCustomer() {
            var customer = {
                "Email": $('#Email').val(),
                "UserName": $('#UserName').val(),
                "Password": $('#Password').val(),
                "ConfirmPassword": $('#ConfirmPassword').val(),
                "PhoneNumber": $('#PhoneNumber').val(),
            }

            return customer;
        };
        $(document).ready(function (e) {
            
            $('#create-admin-form').on('click', '.js-create', function (e) {
                e.preventDefault();
                var _button = $(this);

                var customer = getCustomer();
                console.log(customer);

                $.ajax({
                    url: '/Admin/Account/CreateAdminAsync/',
                    data: customer,
                    method: 'POST',
                    success: function (res) {
                        if (!res.success) {
                            if (res.data && res.data.length) {
                                $('#create-admin-form .field-validation-error').empty();
                                res.data.forEach(e => {
                                    $('#create-admin-form [name=' + e.name + ']~.field-validation-error').html(e.error);
                                });
                                swal('Thất bại', res.message, 'warning');
                            } else {
                                swal('Thất bại', res.message, 'error');
                            }
                        } else {
                            sessionStorage.setItem('message', res.message);
                            window.location.replace(res.url);
                        }
                    },
                    fail: function () {

                    }
                });



            });
        });
    </script>
}

